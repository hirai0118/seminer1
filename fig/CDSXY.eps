%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./eps/CDSXY.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon May 13 11:28:06 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -150 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./eps/CDSXY.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (hirai)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon May 13 11:28:06 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 450 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
2160 1463 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 1463 M
[ [(Times) 450.0 0.0 true true 0 ( 0)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 1930 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 1930 M
[ [(Times) 450.0 0.0 true true 0 ( 0.02)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 2397 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 2397 M
[ [(Times) 450.0 0.0 true true 0 ( 0.04)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 2864 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 2864 M
[ [(Times) 450.0 0.0 true true 0 ( 0.06)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 3331 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 3331 M
[ [(Times) 450.0 0.0 true true 0 ( 0.08)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 3798 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 3798 M
[ [(Times) 450.0 0.0 true true 0 ( 0.1)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 4265 M
63 0 V
4436 0 R
-63 0 V
stroke
1890 4265 M
[ [(Times) 450.0 0.0 true true 0 ( 0.12)]
] -150.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
2160 1440 M
0 63 V
0 2996 R
0 -63 V
stroke
2160 990 M
[ [(Times) 450.0 0.0 true true 0 (-0.04)]
] -150.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3285 1440 M
0 63 V
0 2996 R
0 -63 V
stroke
3285 990 M
[ [(Times) 450.0 0.0 true true 0 (-0.02)]
] -150.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4410 1440 M
0 63 V
0 2996 R
0 -63 V
stroke
4410 990 M
[ [(Times) 450.0 0.0 true true 0 ( 0)]
] -150.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5534 1440 M
0 63 V
0 2996 R
0 -63 V
stroke
5534 990 M
[ [(Times) 450.0 0.0 true true 0 ( 0.02)]
] -150.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6659 1440 M
0 63 V
0 2996 R
0 -63 V
stroke
6659 990 M
[ [(Times) 450.0 0.0 true true 0 ( 0.04)]
] -150.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCb setrgbcolor
2160 1463 M
4499 0 V
stroke
LTB
LCb setrgbcolor
2160 4499 N
0 -3059 V
4499 0 V
0 3059 V
-4499 0 V
Z stroke
1.000 UP
LCb setrgbcolor
585 2970 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 450.0 0.0 true true 0 (X [m])]
] -150.0 MCshow
grestore
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
4409 315 M
[ [(Times) 450.0 0.0 true true 0 (Y [m])]
] -150.0 MCshow
LTb
% Begin plot #1
1.000 UP
5.000 UL
LTb
LC0 setrgbcolor
3121 1494 Pls
3111 1494 Pls
3102 1494 Pls
3093 1494 Pls
3083 1495 Pls
3074 1495 Pls
3064 1495 Pls
3055 1495 Pls
3045 1495 Pls
3036 1496 Pls
3027 1496 Pls
3017 1496 Pls
3008 1496 Pls
2999 1497 Pls
2989 1497 Pls
2980 1497 Pls
2971 1497 Pls
2961 1497 Pls
2952 1498 Pls
2943 1498 Pls
2934 1498 Pls
2925 1498 Pls
2916 1499 Pls
2907 1499 Pls
2898 1499 Pls
2889 1499 Pls
2880 1500 Pls
2871 1500 Pls
2863 1500 Pls
2854 1500 Pls
2846 1501 Pls
2837 1501 Pls
2829 1501 Pls
2821 1501 Pls
2812 1502 Pls
2804 1502 Pls
2796 1502 Pls
2788 1502 Pls
2781 1503 Pls
2773 1503 Pls
2765 1503 Pls
2758 1503 Pls
2751 1504 Pls
2744 1504 Pls
2737 1504 Pls
2730 1505 Pls
2723 1505 Pls
2716 1505 Pls
2710 1505 Pls
2704 1506 Pls
2698 1506 Pls
2692 1506 Pls
2686 1507 Pls
2680 1507 Pls
2675 1507 Pls
2669 1508 Pls
2664 1508 Pls
2659 1508 Pls
2654 1509 Pls
2650 1509 Pls
2645 1509 Pls
2641 1510 Pls
2637 1510 Pls
2633 1510 Pls
2629 1511 Pls
2626 1511 Pls
2623 1511 Pls
2619 1512 Pls
2617 1512 Pls
2614 1512 Pls
2611 1513 Pls
2609 1513 Pls
2607 1514 Pls
2605 1514 Pls
2603 1514 Pls
2601 1515 Pls
2599 1515 Pls
2598 1515 Pls
2597 1516 Pls
2596 1516 Pls
2595 1517 Pls
2595 1517 Pls
2594 1517 Pls
2594 1518 Pls
2594 1518 Pls
2593 1519 Pls
2594 1519 Pls
2594 1520 Pls
2594 1520 Pls
2594 1520 Pls
2595 1521 Pls
2596 1521 Pls
2596 1522 Pls
2597 1522 Pls
2598 1523 Pls
2599 1523 Pls
2600 1523 Pls
2601 1524 Pls
2602 1524 Pls
2603 1525 Pls
2605 1525 Pls
5132 2480 Pls
5151 2487 Pls
5170 2494 Pls
5189 2502 Pls
5208 2509 Pls
5227 2516 Pls
5245 2523 Pls
5264 2530 Pls
5283 2537 Pls
5302 2544 Pls
5321 2551 Pls
5339 2558 Pls
5358 2566 Pls
5377 2573 Pls
5396 2580 Pls
5414 2587 Pls
5433 2594 Pls
5451 2601 Pls
5470 2608 Pls
5488 2615 Pls
5506 2622 Pls
5525 2629 Pls
5543 2636 Pls
5561 2642 Pls
5579 2649 Pls
5597 2656 Pls
5614 2663 Pls
5632 2670 Pls
5649 2676 Pls
5667 2683 Pls
5684 2689 Pls
5701 2696 Pls
5718 2702 Pls
5734 2709 Pls
5751 2715 Pls
5767 2722 Pls
5783 2728 Pls
5799 2734 Pls
5815 2740 Pls
5831 2746 Pls
5846 2752 Pls
5861 2758 Pls
5876 2764 Pls
5890 2769 Pls
5905 2775 Pls
5919 2781 Pls
5933 2786 Pls
5946 2791 Pls
5959 2797 Pls
5972 2802 Pls
5985 2807 Pls
5997 2812 Pls
6009 2817 Pls
6021 2822 Pls
6032 2826 Pls
6043 2831 Pls
6054 2835 Pls
6065 2840 Pls
6075 2844 Pls
6085 2848 Pls
6094 2852 Pls
6103 2856 Pls
6112 2860 Pls
6120 2863 Pls
6128 2867 Pls
6136 2870 Pls
6143 2873 Pls
6150 2877 Pls
6157 2880 Pls
6163 2883 Pls
6169 2885 Pls
6175 2888 Pls
6180 2891 Pls
6185 2893 Pls
6189 2896 Pls
6193 2898 Pls
6197 2900 Pls
6201 2902 Pls
6204 2904 Pls
6207 2906 Pls
6209 2907 Pls
6212 2909 Pls
6214 2910 Pls
6215 2912 Pls
6217 2913 Pls
6218 2914 Pls
6219 2915 Pls
6219 2916 Pls
6220 2917 Pls
6220 2918 Pls
6220 2919 Pls
6220 2920 Pls
6219 2920 Pls
6219 2921 Pls
6218 2922 Pls
6217 2922 Pls
6216 2923 Pls
6215 2923 Pls
6214 2924 Pls
6213 2924 Pls
6212 2924 Pls
3646 3852 Pls
3627 3858 Pls
3608 3865 Pls
3589 3872 Pls
3569 3879 Pls
3550 3886 Pls
3531 3893 Pls
3512 3900 Pls
3493 3907 Pls
3474 3914 Pls
3455 3921 Pls
3436 3928 Pls
3417 3934 Pls
3398 3941 Pls
3379 3948 Pls
3360 3955 Pls
3341 3962 Pls
3322 3969 Pls
3304 3975 Pls
3285 3982 Pls
3266 3989 Pls
3248 3996 Pls
3229 4002 Pls
3211 4009 Pls
3193 4015 Pls
3175 4022 Pls
3157 4029 Pls
3139 4035 Pls
3121 4041 Pls
3103 4048 Pls
3086 4054 Pls
3068 4061 Pls
3051 4067 Pls
3034 4073 Pls
3017 4079 Pls
3001 4085 Pls
2984 4091 Pls
2968 4097 Pls
2952 4103 Pls
2936 4109 Pls
2920 4114 Pls
2905 4120 Pls
2890 4126 Pls
2875 4131 Pls
2860 4136 Pls
2846 4142 Pls
2831 4147 Pls
2818 4152 Pls
2804 4157 Pls
2791 4162 Pls
2778 4167 Pls
2765 4171 Pls
2752 4176 Pls
2740 4180 Pls
2728 4185 Pls
2717 4189 Pls
2706 4193 Pls
2695 4197 Pls
2684 4201 Pls
2674 4205 Pls
2664 4208 Pls
2655 4212 Pls
2645 4215 Pls
2637 4219 Pls
2628 4222 Pls
2620 4225 Pls
2612 4228 Pls
2605 4231 Pls
2598 4233 Pls
2591 4236 Pls
2585 4238 Pls
2578 4241 Pls
2573 4243 Pls
2567 4245 Pls
2562 4247 Pls
2558 4249 Pls
2553 4251 Pls
2549 4252 Pls
2546 4254 Pls
2542 4255 Pls
2539 4257 Pls
2536 4258 Pls
2534 4259 Pls
2532 4260 Pls
2530 4261 Pls
2528 4262 Pls
2526 4262 Pls
2525 4263 Pls
2524 4263 Pls
2524 4264 Pls
2523 4264 Pls
2523 4265 Pls
2523 4265 Pls
2523 4265 Pls
2523 4265 Pls
2523 4265 Pls
2523 4265 Pls
2524 4265 Pls
2524 4265 Pls
2525 4265 Pls
2525 4265 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
2160 4499 N
0 -3059 V
4499 0 V
0 3059 V
-4499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
